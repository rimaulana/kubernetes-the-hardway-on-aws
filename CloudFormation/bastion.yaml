---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create Bastion host to access EKS worker nodes'

Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH access into bastion host
    Type: AWS::EC2::KeyPair::KeyName

  BastionAmiId:
    Type: AWS::EC2::Image::Id
    Description: Define AWS Linux 2 ImageId for bastion host

  BastionInstanceType:
    Description: Bastion host instance type
    Type: String
    Default: t2.small
    AllowedValues: 
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium 
    ConstraintDescription: must be a valid EC2 instance type.
  
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Define additional bastion's security group, the security group allowed to make SSH connection to worker node's security group

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Define VPC ID where worker nodes will be deployed

  PublicSubnets:
    Type: String
    Description: Define public subnets on VPC for proxy server, multiple Subnet Ids separated by a comma subnet-123,subnet-456
 
  ClusterName:
    Description: The cluster name provided when the cluster was created. If it is incorrect, nodes will not be able to join the cluster.
    Type: String
  
  AllowSSHFrom:
    Type: String
    Description: Range of addresses allowed to SSH into Bastion
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 0.0.0.0/0

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'EKS Cluster Configuration'
        Parameters:
        - ClusterName

      - Label:
          default: 'VPC Configuration'
        Parameters:
        - VpcId
        - PublicSubnets
        - BastionSecurityGroup

      - Label:
          default: 'Bastion host configuration'
        Parameters:
        - KeyName
        - BastionAmiId
        - BastionInstanceType
        - AllowSSHFrom

Resources:
  PublicBastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow bastion to be accessed via SSH from certain IPs
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - CidrIp: !Ref AllowSSHFrom
        Description: !Sub "Allow ssh from ${AllowSSHFrom}"
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
      Tags:
      - Key: Name 
        Value: !Sub '${ClusterName}-bastion-allow-ssh'
      - Key: auto-delete
        Value: "no"

  Bastion:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref BastionAmiId
      InstanceType: !Ref BastionInstanceType
      KeyName: !Ref KeyName
      SubnetId:
        Fn::Select:
        - 0
        - Fn::Split:
          - ','
          - !Ref PublicSubnets
      SecurityGroupIds:
      - !Ref PublicBastionSG
      - !Ref BastionSecurityGroup
      # UserData:
      #   Fn::Base64: |
      #     #!/bin/bash
      #     set -o xtrace

      #     # Download kubectl
      #     wget https://storage.googleapis.com/kubernetes-release/release/v1.14.0/bin/linux/amd64/kubectl
      #     chmod +x kubectl
      #     mv kubectl /usr/local/bin
      Tags:
      - Key: Name 
        Value: EKS Bastion
      - Key: auto-delete
        Value: "no"

Outputs:
  BastionDNSName:
    Description: >-
      Bastion Host DNS Name
    Value: !GetAtt Bastion.PublicDnsName