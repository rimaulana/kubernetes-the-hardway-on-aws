---
AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Kubernetes ETCD Instances

Parameters:
  ClusterName:
    Description: The cluster name provided when the cluster was created. If it is incorrect, nodes will not be able to join the cluster.
    Type: String

  EtcdSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Choose security group for worker node

  PrivateSubnets:
    Type: String
    Description: Define private subnets on VPC for proxy server, multiple Subnet Ids separated by comma subnet-123,subnet-456

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  
  AmiId:
    Type: AWS::EC2::Image::Id
    Description: Define AWS Linux 2 ImageId for bastion host
  
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID to be associated with the hosted zone

  HostedZoneId:
    Type: String
    Description: Private Route53 hosted zone id

Resources:
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      ImageId: !Ref AmiId
      InstanceType: t3.xlarge
      KeyName: !Ref KeyName
      SecurityGroups:
      - !Ref EtcdSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 50
            VolumeType: gp2
            DeleteOnTermination: true
  
  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: '3'
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: '3'
      MaxSize: '3'
      VPCZoneIdentifier:
        Fn::Split:
        - ','
        - !Ref PrivateSubnets
      TargetGroupARNs:
      - !Ref DefaultTargetGroup
      Tags:
      - Key: Name
        Value: !Sub "${ClusterName}-node"
        PropagateAtLaunch: true
      - Key: !Sub 'kubernetes.io/cluster/${ClusterName}'
        Value: 'owned'
        PropagateAtLaunch: true
      - Key: auto-delete
        Value: "no"
        PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 5
  
  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      HealthCheckProtocol: TCP
      Port: 2380
      Protocol: TCP
      TargetType: instance
      Tags:
      - Key: !Sub 'kubernetes.io/cluster/${ClusterName}'
        Value: 'shared'

  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internal
      Subnets:
        Fn::Split:
        - ','
        - !Ref PrivateSubnets
      Type: network
      Tags:
      - Key: !Sub 'kubernetes.io/cluster/${ClusterName}'
        Value: 'shared'

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 2380
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup
  
  DnsName:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt NetworkLoadBalancer.DNSName
        HostedZoneId: !GetAtt NetworkLoadBalancer.CanonicalHostedZoneID
      HostedZoneId: !Ref HostedZoneId
      Name: etcd.gresik.io
      Type: A